
name: "CI"
description: "Build & tests program."
runs:
  using: composite
  steps:
  - name: DotNetCoreCLI@2
    shell: pwsh
    run: dotnet build --configuration release

  - name: DotNetCoreCLI@2
    shell: pwsh
    run: dotnet test --configuration release -- xUnit.AppDomain=denied xUnit.ParallelizeTestCollections=false

  - name: DotNetCoreCLI@2
    shell: pwsh
    run: dotnet run --project Src/Tests/Samuel.Performance.Tests/Samuel.Performance.Tests.csproj --configuration release -- --filter '*ChangelogPerformanceTests*'  --artifacts artifacts

  - name: Archive production artifacts
    uses: actions/upload-artifact@v4
    with:
      name: dist-without-markdown
      path: |
        artifacts


#       - task: Powershell@2
#         displayName: 'Performance test'
#         condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#         inputs:
#           workingDirectory: $(Build.SourcesDirectory)/Src/Tests/Samuel.Performance.Tests
#           targetType: 'inline'
#           pwsh: true
#           script: dotnet run --configuration release --  --filter '*ChangelogPerformanceTests*'  --artifacts $(Build.ArtifactStagingDirectory)/Tests

#       - task: PublishBuildArtifacts@1
#         condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#         displayName: "Publish Artifact: PerformanceTest"
#         inputs:
#           PathtoPublish: $(Build.ArtifactStagingDirectory)/Tests
#           ArtifactName: "PerformanceTests"

#       - task: Powershell@2
#         displayName: 'Build Samuel'
#         condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#         inputs:
#           workingDirectory: $(Build.SourcesDirectory)/Src/Console
#           targetType: 'inline'
#           pwsh: true
#           script: dotnet pack --output $(Build.ArtifactStagingDirectory)/SemanticRelease

#       - task: PublishBuildArtifacts@1
#         displayName: "Publish Artifact: SemanticRelease"
#         condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#         inputs:
#           PathtoPublish: "$(Build.ArtifactStagingDirectory)/SemanticRelease"
#           ArtifactName: "SemanticRelease"
